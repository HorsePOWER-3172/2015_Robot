// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3172.Samuel.subsystems;

import org.usfirst.frc3172.Samuel.Robot;
import org.usfirst.frc3172.Samuel.RobotMap;
import org.usfirst.frc3172.Samuel.commands.TankDrive;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.Joystick.AxisType;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Drive extends Subsystem {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController leftMotor = RobotMap.driveLeftMotor;
    SpeedController rightMotor = RobotMap.driveRightMotor;
    RobotDrive robotDrive21 = RobotMap.driveRobotDrive21;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	double forward = -.2;//Might be backwards in which case change ones to negative ones
	double backward = .2;//Might be backwards in which case change ones to positive ones
	//boolean enable = false;
	boolean lefte = false;
	boolean righte = false;
	double max = 0.8;
	double min = -0.8;
	double enhancer = 0.5;

	// Put methods for controlling this subsystem
	// here. Call these from Commands.

	// driveRobotDrive21.setSafetyEnabled(false);is in robotmap under samuel. set to false to remove spam in riolog.
	public void renable() {
		righte = true;
	}
	public void lenable() {
		lefte = true;
	}
	public void rdisable() {
		righte = false;
	}
	public void ldisable() {
		lefte = false;
	}
	/*public void enable() {
		enable = true;
	}
	public void disable() {
		enable = false;
	}*/
	public void stop() {
		leftMotor.set(0);
		rightMotor.set(0);
	}
	public void forward1() {
		leftMotor.set(backward * 0.7);//switch for forward
		rightMotor.set(forward * 0.7);

	}
	public void forward2() {
		leftMotor.set(backward);//switch for forward
		rightMotor.set(forward);

	}
	public void forwardRight() {
		rightMotor.set(forward);
		leftMotor.set(0);
	}
	public void forwardLeft() {
		leftMotor.set(forward);
		rightMotor.set(0);
	}
	public void backward() {
		leftMotor.set(backward);
		rightMotor.set(backward);
	}
	public void tankDriveLeft(Joystick left) {
		if((lefte && righte == false)||(lefte == false && righte)) {
			if (-left.getAxis(AxisType.kY) < max && -left.getAxis(AxisType.kY) > min){ 
				leftMotor.set(-left.getAxis(AxisType.kY)* enhancer);//to change speed add *.8,.5,.3.etc. With /20, should be 5 different speed settings.
			}
			else if (-left.getAxis(AxisType.kY) > max) {
				leftMotor.set(max* enhancer);
			}
			else if (-left.getAxis(AxisType.kY) < min) {
				leftMotor.set(min* enhancer);
			}
			System.out.println("Left Motor");
			System.out.println("Left Motor = "+ leftMotor.get());//may have to mess around with values or eliminate if need be.
		}
	}
	public void tankDriveRight(Joystick right) {
		if((lefte && righte == false)||(lefte == false && righte)) {
			if (right.getAxis(AxisType.kY) < max && right.getAxis(AxisType.kY) > min){ 
				rightMotor.set(right.getAxis(AxisType.kY)* enhancer);
			}
			else if (right.getAxis(AxisType.kY) > max) {
				rightMotor.set(max* enhancer);
			}
			else if (right.getAxis(AxisType.kY) < min) {
				rightMotor.set(min* enhancer);
			}
			System.out.println("Right Motor");
			System.out.println("Right Motor = "+ rightMotor.get());
		}
		else if((lefte && righte)) {
			if (right.getAxis(AxisType.kY) < max && right.getAxis(AxisType.kY) > min){ 
				rightMotor.set(right.getAxis(AxisType.kY)* enhancer);
			}
			else if (right.getAxis(AxisType.kY) > max) {
				rightMotor.set(max* enhancer);
			}
			else if (right.getAxis(AxisType.kY) < min) {
				rightMotor.set(min* enhancer);
			}
			if (-right.getAxis(AxisType.kY) < max && -right.getAxis(AxisType.kY) > min){ 
				leftMotor.set(-right.getAxis(AxisType.kY)* enhancer);
			}
			else if (-right.getAxis(AxisType.kY) > max) {
				leftMotor.set(max* enhancer);
			}
			else if (-right.getAxis(AxisType.kY) < min) {
				leftMotor.set(min* enhancer);
			}
			System.out.println("Right Motor and Left");
			System.out.println("Right Motor = "+ rightMotor.get());
			System.out.println("Left Motor = "+ leftMotor.get());
		}
	}
	/*public void tankDriveLeft(Joystick left) {
		if(enable) {
			leftMotor.set(Math.round(-left.getAxis(AxisType.kY)*100)/20);//to change speed add *.8,.5,.3.etc. With /20, should be 5 different speed settings.
		System.out.println("Left Motor = "+ leftMotor.get());//may have to mess around with values or eliminate if need be.
		}
	}
	public void tankDriveRight(Joystick right) {
		if(enable) {
			rightMotor.set(Math.round(right.getAxis(AxisType.kY)*100)/20);
			System.out.println("Right Motor = "+ rightMotor.get());
		}
	}*/


	public void initDefaultCommand() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new TankDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// Set the default command for a subsystem here.
		//setDefaultCommand(new MySpecialCommand());
	}
}

