// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3172.Samuel.subsystems;

import org.usfirst.frc3172.Samuel.Robot;
import org.usfirst.frc3172.Samuel.RobotMap;
import org.usfirst.frc3172.Samuel.commands.ElevatorJoystick;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.Joystick.AxisType;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Elevator extends Subsystem {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    SpeedController elevatorMotor = RobotMap.elevatorElevatorMotor;
    DigitalInput elevatorUp = RobotMap.elevatorElevatorUp;
    DigitalInput elevatorDown = RobotMap.elevatorElevatorDown;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	double raise = -1;//Might be backwards in which case change ones to negative ones
	double lower = 1;//Might be backwards in which case change ones to positive ones
	boolean enable = false;
	Counter counterUp = new Counter(elevatorUp);
	Counter counterDown = new Counter(elevatorDown);

	public boolean printLimitSwitches() {
		System.out.println("Elevator SubSystem elevatorUp limitswitch = " + counterUp.get());
		System.out.println("Elevator SubSystem elevatorDown limitswitch = " + counterDown.get());
		return true;
	}

	public boolean ElevatorUp() {
		//System.out.println("CounterUp = " + counterUp.get());
		return counterUp.get() > 0;
		//return elevatorUp.get();
	}
	public boolean ElevatorDown() {
		//System.out.println("CounterDown = " + counterDown.get());
		return counterDown.get() > 0;
		//return elevatorDown.get();
	}
	public void enable() {
		enable = true;
	}
	public void disable() {
		enable = false;
	}
	public void initializeCounterUp() {
		System.out.println("Initialized counterup");
		System.out.println("Elevator SubSystem elevatorUp limitswitch = " + counterUp.get());
		counterUp.reset();
	}
	public void initializeCounterDown() {
		System.out.println("initialized counterdown");
		System.out.println("Elevator SubSystem elevatorDown limitswitch = " + counterDown.get());
		counterDown.reset();
	}

	// Put methods for controlling this subsystem
	// here. Call these from Commands.
	public void rise() {
		elevatorMotor.set(raise);
	}
	public void lower() {
		elevatorMotor.set(lower);
	}
	public void stop() {
		//Robot.elevator.initializeCounterUp();
		//Robot.elevator.initializeCounterDown();
		elevatorMotor.set(0);
	}
	public void joystickElevator(Joystick right) {
		if (enable) {
			if ((counterDown.get() < 1)) {
				if (right.getAxis(AxisType.kX) < .1) {
					elevatorMotor.set(right.getAxis(AxisType.kX));
					System.out.println("Down");
					System.out.println("Joystick = " + right.getAxis(AxisType.kY));
					Robot.elevator.initializeCounterUp();
				}
			}
			if ((counterUp.get() < 1)) {
				if (right.getAxis(AxisType.kX) > .1) {
					elevatorMotor.set(right.getAxis(AxisType.kX));
					System.out.println("Up");
					System.out.println("Joystick = " + right.getAxis(AxisType.kY));
					Robot.elevator.initializeCounterDown();
				}
			}
		}
		return;
	}

	public void initDefaultCommand() {
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new ElevatorJoystick());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

		// Set the default command for a subsystem here.
		//setDefaultCommand(new MySpecialCommand());
	}
}

